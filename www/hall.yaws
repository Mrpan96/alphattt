<erl module=hall_mod>
-include("session.hrl").
-compile(export_all).

out(A) ->
    yaws_rpc:handler_session(A, {?MODULE, handle}).  


handle(_State, {call, leave_room, _}, #session{pid_str = PidStr}) ->
    Pid = web_agent_mgr:get_agent_pid(PidStr),
    ok = web_agent:leave_room(Pid),
    Response = json2:obj_from_list([{"value", true},
                                {"reason", ""}]),      
    {true, 0, #session{pid_str = pid_to_list(Pid)}, {response, Response}};

handle(_State, {call, enter_room, {array, [RoomID]}}, #session{pid_str = PidStr}) ->
    Pid = web_agent_mgr:get_agent_pid(PidStr),
    ok = web_agent:enter_room(Pid, RoomID),
    Response = json2:obj_from_list([{"value", true},
                                {"reason", ""}]),      
    {true, 0, #session{pid_str = pid_to_list(Pid)}, {response, Response}};
handle(_State, {call, Func, _Args}, Session = #session{pid_str = PidStr}) ->
    io:format("hall unknown func call ~p, web_agent ~p~n", [Func, PidStr]),
    {true, 0, Session, {response, "ok"}}.     

</erl>

